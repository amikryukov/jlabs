Q: Что происходит с монопольным доступом к объекту,
 при выполнении потоком кода конструкции synchronized на этом объекте?
A: Если другому потоку потребуется обратится к методам или ресурсам данного объекта -
 он будет блокирован до окончания работы блока synchronized.

Q: Если поток выполняет из метода synchronized( который блокирует объект класса) метод wait,
 то почему другой поток может зайти в конструкцию synchronized для этого объекта,
 чтобы выполнить метод notify?
A: при вызове метода wait на объекте которые синхронизирован, текущий поток приостанавливается,
 и блокировка с объекта снимается. Notify приводит к возобналению работы приостановившегося потока.

Q: Перечислить все случаи, когда снимается монопольный доступ к объекту, используемому в конструкции synchronized.
A: Вызван метод wait у синхронизованного объекта.

Q: Если параллельно выполняются 2 потока ,
 изменяющих переменную x (один поток добавляет 1 к  х, а другой поток вычитает 1) и нужно,
 чтобы после действия второго потока вывод значения х всегда был нулем,
 то будет ли для этой цели правильным использовать следующий участок кода?:
   synchronized (obj) {
   ......
   x --;
   .....}
   System.out.println(“x=”+x);
A: Так как вывод происходит за пределами синхронизованого блока, то порядок выполнения sout может быть произвольный.
 Будет не правильно использовать такой участок кода.



